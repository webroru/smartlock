version: '3'

# PDO ATTR_PERSISTENT + wait_timeout
services:
  mysql:
    image: mysql:8.0
    volumes:
      - db-data:/var/lib/mysql/:rw
    environment:
      MYSQL_DATABASE: smartlock
      MYSQL_USER: smartlock
      MYSQL_PASSWORD: smartlock
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "127.0.0.1:3306:3306"

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/:rw
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: "serverName=xdebug-docker"
      XDEBUG_CONFIG: "client_host=host.docker.internal xdebug.start_with_request=yes"
      XDEBUG_MODE: "debug"
      XDEBUG_SESSION: "PHPSTORM"
    extra_hosts:
      - "host.docker.internal:172.30.208.1"
    ports:
      - "127.0.0.1:9000:9000"

  cron:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    command: ["crond", "-f", "-d", "8"]
    restart: unless-stopped
    volumes:
      - ./:/var/www/:rw

  worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    command: ["php", "-f", "command.php", "queue:consume"]
    restart: unless-stopped
    volumes:
      - ./:/var/www/:rw
    depends_on:
      - rabbitmq

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/hosts:/etc/nginx/conf.d/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    links:
      - php

  rabbitmq:
    env_file: .env
    hostname: rabbitmq
    build:
      context: .
      dockerfile: docker/rabbitmq/Dockerfile
    ports:
      - "127.0.0.1:15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia/:rw

volumes:
  db-data:
  rabbitmq-data:
